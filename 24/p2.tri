module io at "trilogy:io" use readlines, println
module str at "trilogy:str" use chomp, split
module num at "trilogy:num" use cast
module array at "trilogy:array" use map, length
module iter at "trilogy:iter" use rangex

func parse input = input
    |> split " @ "
    |> map (split ", " >> map cast)

proc main!() {
    let hailstones = [parse <| chomp line for line in readlines!()]

    let [
        [[ax, ay, az], [avx, avy, avz]],
        [[bx, by, bz], [bvx, bvy, bvz]],
        [[cx, cy, cz], [cvx, cvy, cvz]],
        [[dx, dy, dz], [dvx, dvy, dvz]],
        [[ex, ey, ez], [evx, evy, evz]],
        [[fx, fy, fz], [fvx, fvy, fvz]],
        [[gx, gy, gz], [gvx, gvy, gvz]],
        [[hx, hy, hz], [hvx, hvy, hvz]],
        [[ix, iy, iz], [ivx, ivy, ivz]],
        ..
    ] = hailstones

    # what the heck

    println!(total)
}
